// Generated by Dagger (https://google.github.io/dagger).
package tomaszkopacz.meetbam.presenter;

import com.google.firebase.auth.FirebaseAuth;
import dagger.MembersInjector;
import javax.inject.Provider;
import tomaszkopacz.meetbam.interactor.WebService;

public final class MainPostsFragmentPresenter_MembersInjector
    implements MembersInjector<MainPostsFragmentPresenter> {
  private final Provider<WebService> webServiceProvider;

  private final Provider<FirebaseAuth> authProvider;

  public MainPostsFragmentPresenter_MembersInjector(
      Provider<WebService> webServiceProvider, Provider<FirebaseAuth> authProvider) {
    this.webServiceProvider = webServiceProvider;
    this.authProvider = authProvider;
  }

  public static MembersInjector<MainPostsFragmentPresenter> create(
      Provider<WebService> webServiceProvider, Provider<FirebaseAuth> authProvider) {
    return new MainPostsFragmentPresenter_MembersInjector(webServiceProvider, authProvider);
  }

  @Override
  public void injectMembers(MainPostsFragmentPresenter instance) {
    injectWebService(instance, webServiceProvider.get());
    injectAuth(instance, authProvider.get());
  }

  public static void injectWebService(MainPostsFragmentPresenter instance, WebService webService) {
    instance.webService = webService;
  }

  public static void injectAuth(MainPostsFragmentPresenter instance, FirebaseAuth auth) {
    instance.auth = auth;
  }
}
