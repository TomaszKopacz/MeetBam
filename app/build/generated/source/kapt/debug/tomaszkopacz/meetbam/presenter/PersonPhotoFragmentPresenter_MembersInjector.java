// Generated by Dagger (https://google.github.io/dagger).
package tomaszkopacz.meetbam.presenter;

import dagger.MembersInjector;
import javax.inject.Provider;
import tomaszkopacz.meetbam.interactor.AuthService;
import tomaszkopacz.meetbam.interactor.ImageFilesService;
import tomaszkopacz.meetbam.interactor.StorageService;

public final class PersonPhotoFragmentPresenter_MembersInjector
    implements MembersInjector<PersonPhotoFragmentPresenter> {
  private final Provider<ImageFilesService> imageFilesServiceProvider;

  private final Provider<StorageService> storageProvider;

  private final Provider<AuthService> authProvider;

  public PersonPhotoFragmentPresenter_MembersInjector(
      Provider<ImageFilesService> imageFilesServiceProvider,
      Provider<StorageService> storageProvider,
      Provider<AuthService> authProvider) {
    this.imageFilesServiceProvider = imageFilesServiceProvider;
    this.storageProvider = storageProvider;
    this.authProvider = authProvider;
  }

  public static MembersInjector<PersonPhotoFragmentPresenter> create(
      Provider<ImageFilesService> imageFilesServiceProvider,
      Provider<StorageService> storageProvider,
      Provider<AuthService> authProvider) {
    return new PersonPhotoFragmentPresenter_MembersInjector(
        imageFilesServiceProvider, storageProvider, authProvider);
  }

  @Override
  public void injectMembers(PersonPhotoFragmentPresenter instance) {
    injectImageFilesService(instance, imageFilesServiceProvider.get());
    injectStorage(instance, storageProvider.get());
    injectAuth(instance, authProvider.get());
  }

  public static void injectImageFilesService(
      PersonPhotoFragmentPresenter instance, ImageFilesService imageFilesService) {
    instance.imageFilesService = imageFilesService;
  }

  public static void injectStorage(PersonPhotoFragmentPresenter instance, StorageService storage) {
    instance.storage = storage;
  }

  public static void injectAuth(PersonPhotoFragmentPresenter instance, AuthService auth) {
    instance.auth = auth;
  }
}
