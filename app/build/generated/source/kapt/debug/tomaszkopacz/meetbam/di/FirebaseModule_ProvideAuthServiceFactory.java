// Generated by Dagger (https://google.github.io/dagger).
package tomaszkopacz.meetbam.di;

import com.google.firebase.auth.FirebaseAuth;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import tomaszkopacz.meetbam.interactor.AuthService;

public final class FirebaseModule_ProvideAuthServiceFactory implements Factory<AuthService> {
  private final FirebaseModule module;

  private final Provider<FirebaseAuth> authProvider;

  public FirebaseModule_ProvideAuthServiceFactory(
      FirebaseModule module, Provider<FirebaseAuth> authProvider) {
    this.module = module;
    this.authProvider = authProvider;
  }

  @Override
  public AuthService get() {
    return Preconditions.checkNotNull(
        module.provideAuthService(authProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static FirebaseModule_ProvideAuthServiceFactory create(
      FirebaseModule module, Provider<FirebaseAuth> authProvider) {
    return new FirebaseModule_ProvideAuthServiceFactory(module, authProvider);
  }

  public static AuthService proxyProvideAuthService(FirebaseModule instance, FirebaseAuth auth) {
    return Preconditions.checkNotNull(
        instance.provideAuthService(auth),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
