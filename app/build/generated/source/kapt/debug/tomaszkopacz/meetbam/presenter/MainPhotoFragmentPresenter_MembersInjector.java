// Generated by Dagger (https://google.github.io/dagger).
package tomaszkopacz.meetbam.presenter;

import dagger.MembersInjector;
import javax.inject.Provider;
import tomaszkopacz.meetbam.interactor.AuthService;
import tomaszkopacz.meetbam.interactor.DatabaseService;
import tomaszkopacz.meetbam.interactor.ImageFilesService;
import tomaszkopacz.meetbam.interactor.StorageService;

public final class MainPhotoFragmentPresenter_MembersInjector
    implements MembersInjector<MainPhotoFragmentPresenter> {
  private final Provider<AuthService> authServiceProvider;

  private final Provider<DatabaseService> databaseServiceProvider;

  private final Provider<StorageService> storageServiceProvider;

  private final Provider<ImageFilesService> imageFilesServiceProvider;

  public MainPhotoFragmentPresenter_MembersInjector(
      Provider<AuthService> authServiceProvider,
      Provider<DatabaseService> databaseServiceProvider,
      Provider<StorageService> storageServiceProvider,
      Provider<ImageFilesService> imageFilesServiceProvider) {
    this.authServiceProvider = authServiceProvider;
    this.databaseServiceProvider = databaseServiceProvider;
    this.storageServiceProvider = storageServiceProvider;
    this.imageFilesServiceProvider = imageFilesServiceProvider;
  }

  public static MembersInjector<MainPhotoFragmentPresenter> create(
      Provider<AuthService> authServiceProvider,
      Provider<DatabaseService> databaseServiceProvider,
      Provider<StorageService> storageServiceProvider,
      Provider<ImageFilesService> imageFilesServiceProvider) {
    return new MainPhotoFragmentPresenter_MembersInjector(
        authServiceProvider,
        databaseServiceProvider,
        storageServiceProvider,
        imageFilesServiceProvider);
  }

  @Override
  public void injectMembers(MainPhotoFragmentPresenter instance) {
    injectAuthService(instance, authServiceProvider.get());
    injectDatabaseService(instance, databaseServiceProvider.get());
    injectStorageService(instance, storageServiceProvider.get());
    injectImageFilesService(instance, imageFilesServiceProvider.get());
  }

  public static void injectAuthService(
      MainPhotoFragmentPresenter instance, AuthService authService) {
    instance.authService = authService;
  }

  public static void injectDatabaseService(
      MainPhotoFragmentPresenter instance, DatabaseService databaseService) {
    instance.databaseService = databaseService;
  }

  public static void injectStorageService(
      MainPhotoFragmentPresenter instance, StorageService storageService) {
    instance.storageService = storageService;
  }

  public static void injectImageFilesService(
      MainPhotoFragmentPresenter instance, ImageFilesService imageFilesService) {
    instance.imageFilesService = imageFilesService;
  }
}
