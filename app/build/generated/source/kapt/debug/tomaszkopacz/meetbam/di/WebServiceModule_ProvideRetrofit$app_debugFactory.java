// Generated by Dagger (https://google.github.io/dagger).
package tomaszkopacz.meetbam.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class WebServiceModule_ProvideRetrofit$app_debugFactory implements Factory<Retrofit> {
  private final WebServiceModule module;

  private final Provider<OkHttpClient> clientProvider;

  public WebServiceModule_ProvideRetrofit$app_debugFactory(
      WebServiceModule module, Provider<OkHttpClient> clientProvider) {
    this.module = module;
    this.clientProvider = clientProvider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        module.provideRetrofit$app_debug(clientProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static WebServiceModule_ProvideRetrofit$app_debugFactory create(
      WebServiceModule module, Provider<OkHttpClient> clientProvider) {
    return new WebServiceModule_ProvideRetrofit$app_debugFactory(module, clientProvider);
  }

  public static Retrofit proxyProvideRetrofit$app_debug(
      WebServiceModule instance, OkHttpClient client) {
    return Preconditions.checkNotNull(
        instance.provideRetrofit$app_debug(client),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
